print("[üéÑ]Bazooka")
--[Start, Town, Snow, Desert, Aqua, Lava, Candy, Toy, Clans, Underworld, Heaven]
local Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/TimkaZXC/AQGJYRVBTXOMHFEIWCKPDLUSNZ/refs/heads/main/Library"))()
local Hub = Lib.Hub("[üéÑ]Bazooka")
local Breaks = Hub:Section("[üêä]Breaks")
Breaks:Title("[üá∑üá∫]Break", Color3.fromRGB(150, 255,0))
Breaks:Toggle("[üè¢]Start", Color3.fromRGB(150, 255,0), function()
for _, breaks in pairs(workspace.AreaSpawners.Start.Breakables:GetChildren()) do
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = breaks.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
wait(0.5)
end)

Breaks:Toggle("[üè¢]City", Color3.fromRGB(150, 255,0), function()
for _, breaks in pairs(workspace.AreaSpawners.Town.Breakables:GetChildren()) do
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = breaks.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
wait(0.5)
end)

Breaks:Toggle("[üè¢]Snow", Color3.fromRGB(150, 255,0), function()
for _, breaks in pairs(workspace.AreaSpawners.Snow.Breakables:GetChildren()) do
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = breaks.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
wait(0.5)
end)

Breaks:Toggle("[üè¢]Desert", Color3.fromRGB(150, 255,0), function()
for _, breaks in pairs(workspace.AreaSpawners.Desert.Breakables:GetChildren()) do
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = breaks.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
wait(0.5)
end)

Breaks:Toggle("[üè¢]Aqua", Color3.fromRGB(150, 255,0), function()
for _, breaks in pairs(workspace.AreaSpawners.Aqua.Breakables:GetChildren()) do
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = breaks.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
wait(0.5)
end)

Breaks:Toggle("[üè¢]Lava", Color3.fromRGB(150, 255,0), function()
for _, breaks in pairs(workspace.AreaSpawners.Lava.Breakables:GetChildren()) do
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = breaks.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
wait(0.5)
end)

Breaks:Toggle("[üè¢]Candy", Color3.fromRGB(150, 255,0), function()
for _, breaks in pairs(workspace.AreaSpawners.Candy.Breakables:GetChildren()) do
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = breaks.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
wait(0.5)
end)

Breaks:Toggle("[üè¢]Toy", Color3.fromRGB(150, 255,0), function()
for _, breaks in pairs(workspace.AreaSpawners.Toy.Breakables:GetChildren()) do
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = breaks.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
wait(0.5)
end)

Breaks:Toggle("[üè¢]Clans", Color3.fromRGB(150, 255,0), function()
for _, breaks in pairs(workspace.AreaSpawners.Clans.Breakables:GetChildren()) do
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = breaks.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
wait(0.5)
end)

Breaks:Toggle("[üè¢]Underworld", Color3.fromRGB(150, 255,0), function()
for _, breaks in pairs(workspace.AreaSpawners.Underworld.Breakables:GetChildren()) do
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = breaks.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
wait(0.5)
end)

Breaks:Toggle("[üè¢]Heaven", Color3.fromRGB(150, 255,0), function()
for _, breaks in pairs(workspace.AreaSpawners.Heaven.Breakables:GetChildren()) do
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = breaks.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
wait(0.5)
end)

local Boss = Hub:Section("[üêä]Bosses")
Boss:Title("[üá∑üá∫]Destroy", Color3.fromRGB(150, 255,0))
Boss:Toggle("[üëπ]Start", Color3.fromRGB(150, 255,0), function()
for _, boss in pairs(workspace.AreaSpawners.Start.Boss:GetChildren()) do
if not boss then
else
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = boss.Head.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
end
wait()
return
end)

Boss:Toggle("[üëπ]City", Color3.fromRGB(150, 255,0), function()
for _, boss in pairs(workspace.AreaSpawners.Town.Boss:GetChildren()) do
if not boss then
else
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = boss.Head.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
end
wait()
return
end)

Boss:Toggle("[üëπ]Snow", Color3.fromRGB(150, 255,0), function()
for _, boss in pairs(workspace.AreaSpawners.Snow.Boss:GetChildren()) do
if not boss then
else
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = boss.Head.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
end
wait()
return
end)

Boss:Toggle("[üëπ]Desert", Color3.fromRGB(150, 255,0), function()
for _, boss in pairs(workspace.AreaSpawners.Desert.Boss:GetChildren()) do
if not boss then
else
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = boss.Head.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
end
wait()
return
end)

Boss:Toggle("[üëπ]Aqua", Color3.fromRGB(150, 255,0), function()
for _, boss in pairs(workspace.AreaSpawners.Aqua.Boss:GetChildren()) do
if not boss then
else
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = boss.Head.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
end
wait()
return
end)

Boss:Toggle("[üëπ]Lava", Color3.fromRGB(150, 255,0), function()
for _, boss in pairs(workspace.AreaSpawners.Lava.Boss:GetChildren()) do
if not boss then
else
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = boss.Head.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
end
wait()
return
end)

Boss:Toggle("[üëπ]Candy", Color3.fromRGB(150, 255,0), function()
for _, boss in pairs(workspace.AreaSpawners.Candy.Boss:GetChildren()) do
if not boss then
else
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = boss.Head.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
end
wait()
return
end)

Boss:Toggle("[üëπ]Toy", Color3.fromRGB(150, 255,0), function()
for _, boss in pairs(workspace.AreaSpawners.Toy.Boss:GetChildren()) do
if not boss then
else
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = boss.Head.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
end
wait()
return
end)

Boss:Toggle("[üëπ]Clans", Color3.fromRGB(150, 255,0), function()
for _, boss in pairs(workspace.AreaSpawners.Clans.Boss:GetChildren()) do
if not boss then
else
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = boss.Head.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
end
wait()
return
end)

Boss:Toggle("[üëπ]Underworls", Color3.fromRGB(150, 255,0), function()
for _, boss in pairs(workspace.AreaSpawners.Underworls.Boss:GetChildren()) do
if not boss then
else
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = boss.Head.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
end
wait()
return
end)

Boss:Toggle("[üëπ]Heaven", Color3.fromRGB(150, 255,0), function()
for _, boss in pairs(workspace.AreaSpawners.Heaven.Boss:GetChildren()) do
if not boss then
else
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character.BazookaBase,
    [2] = {
        ["Direction"] = Vector3.new(0,0,0),
        ["TargetPosition"] = boss.Head.Position,
        ["TravelDistance"] = 0,
        ["OriginPosition"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
    }
}

game:GetService("ReplicatedStorage").BazookaClient.Shoot:InvokeServer(unpack(args))
end
end
wait()
return
end)

local Drop = Hub:Section("[üêä]Drops")
Drop:Title("[üá∑üá∫]Grab", Color3.fromRGB(150, 255,0))
Drop:Toggle("[‚ö™]Start", Color3.fromRGB(150, 255,0), function()
for _, drop in pairs(workspace.AreaSpawners.Start.Drops:GetChildren()) do
if not drop then
drop.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
end
end
wait()
return
end)

Drop:Toggle("[‚ö™]City", Color3.fromRGB(150, 255,0), function()
for _, drop in pairs(workspace.AreaSpawners.Town.Drops:GetChildren()) do 
if not drop then
else
drop.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
end
end
wait()
return
end)

Drop:Toggle("[‚ö™]Snow", Color3.fromRGB(150, 255,0), function()
for _, drop in pairs(workspace.AreaSpawners.Snow.Drops:GetChildren()) do 
if not drop then
else
drop.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
end
end
wait()
return
end)

Drop:Toggle("[‚ö™]Desert", Color3.fromRGB(150, 255,0), function()
for _, drop in pairs(workspace.AreaSpawners.Desert.Drops:GetChildren()) do
if not drop then
drop.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
end
end
wait()
return
end)

Drop:Toggle("[‚ö™]Aqua", Color3.fromRGB(150, 255,0), function()
for _, drop in pairs(workspace.AreaSpawners.Aqua.Drops:GetChildren()) do 
if not drop then
else
drop.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
end
end
wait()
return
end)

Drop:Toggle("[‚ö™]Lava", Color3.fromRGB(150, 255,0), function()
for _, drop in pairs(workspace.AreaSpawners.Lava.Drops:GetChildren()) do 
if not drop then
else
drop.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
end
end
wait()
return
end)

Drop:Toggle("[‚ö™]Candy", Color3.fromRGB(150, 255,0), function()
for _, drop in pairs(workspace.AreaSpawners.Candy.Drops:GetChildren()) do
if not drop then
drop.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
end
end
wait()
return
end)

Drop:Toggle("[‚ö™]Toy", Color3.fromRGB(150, 255,0), function()
for _, drop in pairs(workspace.AreaSpawners.Toy.Drops:GetChildren()) do 
if not drop then
else
drop.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
end
end
wait()
return
end)

Drop:Toggle("[‚ö™]Clans", Color3.fromRGB(150, 255,0), function()
for _, drop in pairs(workspace.AreaSpawners.Clans.Drops:GetChildren()) do 
if not drop then
else
drop.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
end
end
wait()
return
end)

Drop:Toggle("[‚ö™]Underworld", Color3.fromRGB(150, 255,0), function()
for _, drop in pairs(workspace.AreaSpawners.Underworld.Drops:GetChildren()) do
if not drop then
drop.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
end
end
wait()
return
end)

Drop:Toggle("[‚ö™]Heaven", Color3.fromRGB(150, 255,0), function()
for _, drop in pairs(workspace.AreaSpawners.Heaven.Drops:GetChildren()) do 
if not drop then
else
drop.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
end
end
wait()
return
end)

local Safe = Hub:Section("[üêä]Safes")
Safe:Title("[üá∑üá∫]Open", Color3.fromRGB(150, 255,0))
Safe:Change("[üìÇ]Start", 1, 1, Color3.fromRGB(150, 255,0), function(n)
local args = {
    [1] = "Start",
    [2] = n
}

game:GetService("ReplicatedStorage").Remotes.BuySafe:FireServer(unpack(args))
end)

Safe:Change("[üìÇ]City", 1, 1, Color3.fromRGB(150, 255,0), function(n)
local args = {
    [1] = "Town",
    [2] = n
}

game:GetService("ReplicatedStorage").Remotes.BuySafe:FireServer(unpack(args))
end)

Safe:Change("[üìÇ]Snow", 1, 1, Color3.fromRGB(150, 255,0), function(n)
local args = {
    [1] = "Snow",
    [2] = n
}

game:GetService("ReplicatedStorage").Remotes.BuySafe:FireServer(unpack(args))
end)

Safe:Change("[üìÇ]Desert", 1, 1, Color3.fromRGB(150, 255,0), function(n)
local args = {
    [1] = "Desert",
    [2] = n
}

game:GetService("ReplicatedStorage").Remotes.BuySafe:FireServer(unpack(args))
end)

Safe:Change("[üìÇ]Aqua", 1, 1, Color3.fromRGB(150, 255,0), function(n)
local args = {
    [1] = "Aqua",
    [2] = n
}

game:GetService("ReplicatedStorage").Remotes.BuySafe:FireServer(unpack(args))
end)

Safe:Change("[üìÇ]Lava", 1, 1, Color3.fromRGB(150, 255,0), function(n)
local args = {
    [1] = "Lava",
    [2] = n
}

game:GetService("ReplicatedStorage").Remotes.BuySafe:FireServer(unpack(args))
end)

Safe:Change("[üìÇ]Candy", 1, 1, Color3.fromRGB(150, 255,0), function(n)
local args = {
    [1] = "Candy",
    [2] = n
}

game:GetService("ReplicatedStorage").Remotes.BuySafe:FireServer(unpack(args))
end)

Safe:Change("[üìÇ]Toy", 1, 1, Color3.fromRGB(150, 255,0), function(n)
local args = {
    [1] = "Toy",
    [2] = n
}

game:GetService("ReplicatedStorage").Remotes.BuySafe:FireServer(unpack(args))
end)

Safe:Change("[üìÇ]Clans", 1, 1, Color3.fromRGB(150, 255,0), function(n)
local args = {
    [1] = "Clans",
    [2] = n
}

game:GetService("ReplicatedStorage").Remotes.BuySafe:FireServer(unpack(args))
end)

Safe:Change("[üìÇ]Underworld", 1, 1, Color3.fromRGB(150, 255,0), function(n)
local args = {
    [1] = "Underworld",
    [2] = n
}

game:GetService("ReplicatedStorage").Remotes.BuySafe:FireServer(unpack(args))
end)

Safe:Change("[üìÇ]Heaven", 1, 1, Color3.fromRGB(150, 255,0), function(n)
local args = {
    [1] = "Heaven",
    [2] = n
}

game:GetService("ReplicatedStorage").Remotes.BuySafe:FireServer(unpack(args))
end)
